spring:
  application:
    name: MghBackend

  datasource:
    url: jdbc:mysql://localhost:3306/mgh_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    show-sql: false

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
      enabled: true

server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Configuration JWT
jwt:
  secret: mySecretKeyForMghBackendApplicationVerySecureAndLongEnoughForHS256
  expiration: 86400000 # 24 heures en millisecondes

# Configuration de la documentation API (Swagger)
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    try-it-out-enabled: true
  show-actuator: true

# Configuration des logs
logging:
  level:
    com.mghbackend: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/mgh-backend.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      clean-history-on-start: false

# Configuration CORS
cors:
  allowed-origins: "*"
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "*"
  allow-credentials: true

# Configuration Actuator (monitoring)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true
  health:
    defaults:
      enabled: true

# Informations de l'application
info:
  app:
    name: ${spring.application.name}
    description: "API pour la gestion des complexes h√¥teliers"
    version: "1.0.0"
    encoding: "@project.build.sourceEncoding@"
    java:
      version: "@java.version@"